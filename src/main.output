Terminals unused in grammar

   BOOL


State 94 conflicts: 10 shift/reduce
State 95 conflicts: 10 shift/reduce
State 103 conflicts: 10 shift/reduce
State 113 conflicts: 10 shift/reduce
State 114 conflicts: 10 shift/reduce
State 116 conflicts: 10 shift/reduce
State 120 conflicts: 10 shift/reduce
State 124 conflicts: 10 shift/reduce
State 125 conflicts: 10 shift/reduce
State 126 conflicts: 10 shift/reduce
State 128 conflicts: 10 shift/reduce
State 129 conflicts: 10 shift/reduce
State 131 conflicts: 10 shift/reduce
State 132 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE

    5 statement: SEMICOLON
    6          | declaration SEMICOLON
    7          | assign SEMICOLON
    8          | if
    9          | while
   10          | for
   11          | return SEMICOLON

   12 declaration: T IDENTIFIER LOP_ASSIGN expr
   13            | T idlist

   14 idlist: IDENTIFIER COMMA idlist
   15       | IDENTIFIER

   16 assign: IDENTIFIER LOP_ASSIGN expr

   17 if: S_IF LPAREN expr RPAREN statements

   18 while: S_WHILE LPAREN expr RPAREN statements

   19 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statements
   20    | S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statements
   21    | S_FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN statements
   22    | S_FOR LPAREN expr SEMICOLON SEMICOLON expr RPAREN statements
   23    | S_FOR LPAREN declaration SEMICOLON SEMICOLON expr RPAREN statements
   24    | S_FOR LPAREN expr SEMICOLON expr SEMICOLON RPAREN statements
   25    | S_FOR LPAREN declaration SEMICOLON expr SEMICOLON RPAREN statements
   26    | S_FOR LPAREN SEMICOLON SEMICOLON expr RPAREN statements
   27    | S_FOR LPAREN SEMICOLON expr SEMICOLON RPAREN statements
   28    | S_FOR LPAREN expr SEMICOLON SEMICOLON RPAREN statements
   29    | S_FOR LPAREN declaration SEMICOLON SEMICOLON RPAREN statements
   30    | S_FOR LPAREN SEMICOLON SEMICOLON RPAREN statements

   31 return: S_RETURN
   32       | S_RETURN expr

   33 expr: IDENTIFIER
   34     | TRUE
   35     | FALSE
   36     | expr EQUAL expr
   37     | expr NEQ expr
   38     | expr GT expr
   39     | expr LT expr
   40     | expr GEQ expr
   41     | expr LEQ expr
   42     | NOT expr
   43     | expr AND expr
   44     | expr OR expr
   45     | INTEGER
   46     | CHAR
   47     | STRING
   48     | expr ADD expr
   49     | expr SUB expr
   50     | expr MUL expr
   51     | expr DIV expr
   52     | LPAREN expr RPAREN
   53     | expr MOD expr
   54     | SUB expr
   55     | ADD expr

   56 T: T_INT
   57  | T_CHAR
   58  | T_BOOL
   59  | T_STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 57
T_INT (259) 56
T_STRING (260) 59
T_BOOL (261) 58
LOP_ASSIGN (262) 12 16
S_IF (263) 17
S_WHILE (264) 18
S_RETURN (265) 31 32
S_FOR (266) 19 20 21 22 23 24 25 26 27 28 29 30
LPAREN (267) 17 18 19 20 21 22 23 24 25 26 27 28 29 30 52
RPAREN (268) 17 18 19 20 21 22 23 24 25 26 27 28 29 30 52
LBRACE (269) 4
RBRACE (270) 4
SEMICOLON (271) 5 6 7 11 19 20 21 22 23 24 25 26 27 28 29 30
COMMA (272) 14
OR (273) 44
AND (274) 43
EQUAL (275) 36
NEQ (276) 37
GT (277) 38
LT (278) 39
GEQ (279) 40
LEQ (280) 41
ADD (281) 48 55
SUB (282) 49 54
MUL (283) 50
DIV (284) 51
MOD (285) 53
NOT (286) 42
TRUE (287) 34
FALSE (288) 35
IDENTIFIER (289) 12 14 15 16 33
INTEGER (290) 45
CHAR (291) 46
BOOL (292)
STRING (293) 47
UMINUS (294)
UPLUS (295)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
statements (43)
    on left: 2 3 4, on right: 1 3 4 17 18 19 20 21 22 23 24 25 26 27
    28 29 30
statement (44)
    on left: 5 6 7 8 9 10 11, on right: 2 3
declaration (45)
    on left: 12 13, on right: 6 20 23 25 29
idlist (46)
    on left: 14 15, on right: 13 14
assign (47)
    on left: 16, on right: 7
if (48)
    on left: 17, on right: 8
while (49)
    on left: 18, on right: 9
for (50)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30, on right: 10
return (51)
    on left: 31 32, on right: 11
expr (52)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51 52 53 54 55, on right: 12 16 17 18 19 20 21 22 23 24 25 26 27
    28 32 36 37 38 39 40 41 42 43 44 48 49 50 51 52 53 54 55
T (53)
    on left: 56 57 58 59, on right: 12 13


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    program      go to state 12
    statements   go to state 13
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 1

   57 T: T_CHAR .

    $default  reduce using rule 57 (T)


State 2

   56 T: T_INT .

    $default  reduce using rule 56 (T)


State 3

   59 T: T_STRING .

    $default  reduce using rule 59 (T)


State 4

   58 T: T_BOOL .

    $default  reduce using rule 58 (T)


State 5

   17 if: S_IF . LPAREN expr RPAREN statements

    LPAREN  shift, and go to state 22


State 6

   18 while: S_WHILE . LPAREN expr RPAREN statements

    LPAREN  shift, and go to state 23


State 7

   31 return: S_RETURN .
   32       | S_RETURN . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    $default  reduce using rule 31 (return)

    expr  go to state 34


State 8

   19 for: S_FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statements
   20    | S_FOR . LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statements
   21    | S_FOR . LPAREN SEMICOLON expr SEMICOLON expr RPAREN statements
   22    | S_FOR . LPAREN expr SEMICOLON SEMICOLON expr RPAREN statements
   23    | S_FOR . LPAREN declaration SEMICOLON SEMICOLON expr RPAREN statements
   24    | S_FOR . LPAREN expr SEMICOLON expr SEMICOLON RPAREN statements
   25    | S_FOR . LPAREN declaration SEMICOLON expr SEMICOLON RPAREN statements
   26    | S_FOR . LPAREN SEMICOLON SEMICOLON expr RPAREN statements
   27    | S_FOR . LPAREN SEMICOLON expr SEMICOLON RPAREN statements
   28    | S_FOR . LPAREN expr SEMICOLON SEMICOLON RPAREN statements
   29    | S_FOR . LPAREN declaration SEMICOLON SEMICOLON RPAREN statements
   30    | S_FOR . LPAREN SEMICOLON SEMICOLON RPAREN statements

    LPAREN  shift, and go to state 35


State 9

    4 statements: LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 36
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 10

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 11

   16 assign: IDENTIFIER . LOP_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 37


State 12

    0 $accept: program . $end

    $end  shift, and go to state 38


State 13

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 1 (program)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 14

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 15

    6 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 16

    7 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 17

    8 statement: if .

    $default  reduce using rule 8 (statement)


State 18

    9 statement: while .

    $default  reduce using rule 9 (statement)


State 19

   10 statement: for .

    $default  reduce using rule 10 (statement)


State 20

   11 statement: return . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 21

   12 declaration: T . IDENTIFIER LOP_ASSIGN expr
   13            | T . idlist

    IDENTIFIER  shift, and go to state 43

    idlist  go to state 44


State 22

   17 if: S_IF LPAREN . expr RPAREN statements

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 45


State 23

   18 while: S_WHILE LPAREN . expr RPAREN statements

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 46


State 24

   52 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 47


State 25

   55 expr: ADD . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 48


State 26

   54 expr: SUB . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 49


State 27

   42 expr: NOT . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 50


State 28

   34 expr: TRUE .

    $default  reduce using rule 34 (expr)


State 29

   35 expr: FALSE .

    $default  reduce using rule 35 (expr)


State 30

   33 expr: IDENTIFIER .

    $default  reduce using rule 33 (expr)


State 31

   45 expr: INTEGER .

    $default  reduce using rule 45 (expr)


State 32

   46 expr: CHAR .

    $default  reduce using rule 46 (expr)


State 33

   47 expr: STRING .

    $default  reduce using rule 47 (expr)


State 34

   32 return: S_RETURN expr .
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    OR     shift, and go to state 51
    AND    shift, and go to state 52
    EQUAL  shift, and go to state 53
    NEQ    shift, and go to state 54
    GT     shift, and go to state 55
    LT     shift, and go to state 56
    GEQ    shift, and go to state 57
    LEQ    shift, and go to state 58
    ADD    shift, and go to state 59
    SUB    shift, and go to state 60
    MUL    shift, and go to state 61
    DIV    shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 32 (return)


State 35

   19 for: S_FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN statements
   20    | S_FOR LPAREN . declaration SEMICOLON expr SEMICOLON expr RPAREN statements
   21    | S_FOR LPAREN . SEMICOLON expr SEMICOLON expr RPAREN statements
   22    | S_FOR LPAREN . expr SEMICOLON SEMICOLON expr RPAREN statements
   23    | S_FOR LPAREN . declaration SEMICOLON SEMICOLON expr RPAREN statements
   24    | S_FOR LPAREN . expr SEMICOLON expr SEMICOLON RPAREN statements
   25    | S_FOR LPAREN . declaration SEMICOLON expr SEMICOLON RPAREN statements
   26    | S_FOR LPAREN . SEMICOLON SEMICOLON expr RPAREN statements
   27    | S_FOR LPAREN . SEMICOLON expr SEMICOLON RPAREN statements
   28    | S_FOR LPAREN . expr SEMICOLON SEMICOLON RPAREN statements
   29    | S_FOR LPAREN . declaration SEMICOLON SEMICOLON RPAREN statements
   30    | S_FOR LPAREN . SEMICOLON SEMICOLON RPAREN statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    LPAREN      shift, and go to state 24
    SEMICOLON   shift, and go to state 64
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    declaration  go to state 65
    expr         go to state 66
    T            go to state 21


State 36

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    RBRACE      shift, and go to state 67
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 37

   16 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 68


State 38

    0 $accept: program $end .

    $default  accept


State 39

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 40

    6 statement: declaration SEMICOLON .

    $default  reduce using rule 6 (statement)


State 41

    7 statement: assign SEMICOLON .

    $default  reduce using rule 7 (statement)


State 42

   11 statement: return SEMICOLON .

    $default  reduce using rule 11 (statement)


State 43

   12 declaration: T IDENTIFIER . LOP_ASSIGN expr
   14 idlist: IDENTIFIER . COMMA idlist
   15       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 69
    COMMA       shift, and go to state 70

    $default  reduce using rule 15 (idlist)


State 44

   13 declaration: T idlist .

    $default  reduce using rule 13 (declaration)


State 45

   17 if: S_IF LPAREN expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 71
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 46

   18 while: S_WHILE LPAREN expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 72
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 47

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   52     | LPAREN expr . RPAREN
   53     | expr . MOD expr

    RPAREN  shift, and go to state 73
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 48

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr
   55     | ADD expr .

    $default  reduce using rule 55 (expr)


State 49

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr
   54     | SUB expr .

    $default  reduce using rule 54 (expr)


State 50

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   42     | NOT expr .
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    $default  reduce using rule 42 (expr)


State 51

   44 expr: expr OR . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 74


State 52

   43 expr: expr AND . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 75


State 53

   36 expr: expr EQUAL . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 76


State 54

   37 expr: expr NEQ . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 77


State 55

   38 expr: expr GT . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 78


State 56

   39 expr: expr LT . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 79


State 57

   40 expr: expr GEQ . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 80


State 58

   41 expr: expr LEQ . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 81


State 59

   48 expr: expr ADD . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 82


State 60

   49 expr: expr SUB . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 83


State 61

   50 expr: expr MUL . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 84


State 62

   51 expr: expr DIV . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 85


State 63

   53 expr: expr MOD . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 86


State 64

   21 for: S_FOR LPAREN SEMICOLON . expr SEMICOLON expr RPAREN statements
   26    | S_FOR LPAREN SEMICOLON . SEMICOLON expr RPAREN statements
   27    | S_FOR LPAREN SEMICOLON . expr SEMICOLON RPAREN statements
   30    | S_FOR LPAREN SEMICOLON . SEMICOLON RPAREN statements

    LPAREN      shift, and go to state 24
    SEMICOLON   shift, and go to state 87
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 88


State 65

   20 for: S_FOR LPAREN declaration . SEMICOLON expr SEMICOLON expr RPAREN statements
   23    | S_FOR LPAREN declaration . SEMICOLON SEMICOLON expr RPAREN statements
   25    | S_FOR LPAREN declaration . SEMICOLON expr SEMICOLON RPAREN statements
   29    | S_FOR LPAREN declaration . SEMICOLON SEMICOLON RPAREN statements

    SEMICOLON  shift, and go to state 89


State 66

   19 for: S_FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN statements
   22    | S_FOR LPAREN expr . SEMICOLON SEMICOLON expr RPAREN statements
   24    | S_FOR LPAREN expr . SEMICOLON expr SEMICOLON RPAREN statements
   28    | S_FOR LPAREN expr . SEMICOLON SEMICOLON RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    SEMICOLON  shift, and go to state 90
    OR         shift, and go to state 51
    AND        shift, and go to state 52
    EQUAL      shift, and go to state 53
    NEQ        shift, and go to state 54
    GT         shift, and go to state 55
    LT         shift, and go to state 56
    GEQ        shift, and go to state 57
    LEQ        shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63


State 67

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 68

   16 assign: IDENTIFIER LOP_ASSIGN expr .
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    OR     shift, and go to state 51
    AND    shift, and go to state 52
    EQUAL  shift, and go to state 53
    NEQ    shift, and go to state 54
    GT     shift, and go to state 55
    LT     shift, and go to state 56
    GEQ    shift, and go to state 57
    LEQ    shift, and go to state 58
    ADD    shift, and go to state 59
    SUB    shift, and go to state 60
    MUL    shift, and go to state 61
    DIV    shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 16 (assign)


State 69

   12 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 24
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 91


State 70

   14 idlist: IDENTIFIER COMMA . idlist

    IDENTIFIER  shift, and go to state 92

    idlist  go to state 93


State 71

   17 if: S_IF LPAREN expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 94
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 72

   18 while: S_WHILE LPAREN expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 95
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 73

   52 expr: LPAREN expr RPAREN .

    $default  reduce using rule 52 (expr)


State 74

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   44     | expr OR expr .
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    AND    shift, and go to state 52
    EQUAL  shift, and go to state 53
    NEQ    shift, and go to state 54
    GT     shift, and go to state 55
    LT     shift, and go to state 56
    GEQ    shift, and go to state 57
    LEQ    shift, and go to state 58
    ADD    shift, and go to state 59
    SUB    shift, and go to state 60
    MUL    shift, and go to state 61
    DIV    shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 44 (expr)


State 75

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   43     | expr AND expr .
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    EQUAL  shift, and go to state 53
    NEQ    shift, and go to state 54
    GT     shift, and go to state 55
    LT     shift, and go to state 56
    GEQ    shift, and go to state 57
    LEQ    shift, and go to state 58
    ADD    shift, and go to state 59
    SUB    shift, and go to state 60
    MUL    shift, and go to state 61
    DIV    shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 43 (expr)


State 76

   36 expr: expr . EQUAL expr
   36     | expr EQUAL expr .
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    GT   shift, and go to state 55
    LT   shift, and go to state 56
    GEQ  shift, and go to state 57
    LEQ  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 36 (expr)


State 77

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   37     | expr NEQ expr .
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    GT   shift, and go to state 55
    LT   shift, and go to state 56
    GEQ  shift, and go to state 57
    LEQ  shift, and go to state 58
    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 37 (expr)


State 78

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   38     | expr GT expr .
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 38 (expr)


State 79

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   39     | expr LT expr .
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 39 (expr)


State 80

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   40     | expr GEQ expr .
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 40 (expr)


State 81

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   41     | expr LEQ expr .
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    ADD  shift, and go to state 59
    SUB  shift, and go to state 60
    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 41 (expr)


State 82

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   48     | expr ADD expr .
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 48 (expr)


State 83

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   49     | expr SUB expr .
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 62
    MOD  shift, and go to state 63

    $default  reduce using rule 49 (expr)


State 84

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   50     | expr MUL expr .
   51     | expr . DIV expr
   53     | expr . MOD expr

    $default  reduce using rule 50 (expr)


State 85

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   51     | expr DIV expr .
   53     | expr . MOD expr

    $default  reduce using rule 51 (expr)


State 86

   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr
   53     | expr MOD expr .

    $default  reduce using rule 53 (expr)


State 87

   26 for: S_FOR LPAREN SEMICOLON SEMICOLON . expr RPAREN statements
   30    | S_FOR LPAREN SEMICOLON SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 24
    RPAREN      shift, and go to state 96
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 97


State 88

   21 for: S_FOR LPAREN SEMICOLON expr . SEMICOLON expr RPAREN statements
   27    | S_FOR LPAREN SEMICOLON expr . SEMICOLON RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    SEMICOLON  shift, and go to state 98
    OR         shift, and go to state 51
    AND        shift, and go to state 52
    EQUAL      shift, and go to state 53
    NEQ        shift, and go to state 54
    GT         shift, and go to state 55
    LT         shift, and go to state 56
    GEQ        shift, and go to state 57
    LEQ        shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63


State 89

   20 for: S_FOR LPAREN declaration SEMICOLON . expr SEMICOLON expr RPAREN statements
   23    | S_FOR LPAREN declaration SEMICOLON . SEMICOLON expr RPAREN statements
   25    | S_FOR LPAREN declaration SEMICOLON . expr SEMICOLON RPAREN statements
   29    | S_FOR LPAREN declaration SEMICOLON . SEMICOLON RPAREN statements

    LPAREN      shift, and go to state 24
    SEMICOLON   shift, and go to state 99
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 100


State 90

   19 for: S_FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN statements
   22    | S_FOR LPAREN expr SEMICOLON . SEMICOLON expr RPAREN statements
   24    | S_FOR LPAREN expr SEMICOLON . expr SEMICOLON RPAREN statements
   28    | S_FOR LPAREN expr SEMICOLON . SEMICOLON RPAREN statements

    LPAREN      shift, and go to state 24
    SEMICOLON   shift, and go to state 101
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 102


State 91

   12 declaration: T IDENTIFIER LOP_ASSIGN expr .
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    OR     shift, and go to state 51
    AND    shift, and go to state 52
    EQUAL  shift, and go to state 53
    NEQ    shift, and go to state 54
    GT     shift, and go to state 55
    LT     shift, and go to state 56
    GEQ    shift, and go to state 57
    LEQ    shift, and go to state 58
    ADD    shift, and go to state 59
    SUB    shift, and go to state 60
    MUL    shift, and go to state 61
    DIV    shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 12 (declaration)


State 92

   14 idlist: IDENTIFIER . COMMA idlist
   15       | IDENTIFIER .

    COMMA  shift, and go to state 70

    $default  reduce using rule 15 (idlist)


State 93

   14 idlist: IDENTIFIER COMMA idlist .

    $default  reduce using rule 14 (idlist)


State 94

    3 statements: statements . statement
   17 if: S_IF LPAREN expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 17 (if)]
    T_INT       [reduce using rule 17 (if)]
    T_STRING    [reduce using rule 17 (if)]
    T_BOOL      [reduce using rule 17 (if)]
    S_IF        [reduce using rule 17 (if)]
    S_WHILE     [reduce using rule 17 (if)]
    S_RETURN    [reduce using rule 17 (if)]
    S_FOR       [reduce using rule 17 (if)]
    SEMICOLON   [reduce using rule 17 (if)]
    IDENTIFIER  [reduce using rule 17 (if)]
    $default    reduce using rule 17 (if)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 95

    3 statements: statements . statement
   18 while: S_WHILE LPAREN expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 18 (while)]
    T_INT       [reduce using rule 18 (while)]
    T_STRING    [reduce using rule 18 (while)]
    T_BOOL      [reduce using rule 18 (while)]
    S_IF        [reduce using rule 18 (while)]
    S_WHILE     [reduce using rule 18 (while)]
    S_RETURN    [reduce using rule 18 (while)]
    S_FOR       [reduce using rule 18 (while)]
    SEMICOLON   [reduce using rule 18 (while)]
    IDENTIFIER  [reduce using rule 18 (while)]
    $default    reduce using rule 18 (while)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 96

   30 for: S_FOR LPAREN SEMICOLON SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 103
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 97

   26 for: S_FOR LPAREN SEMICOLON SEMICOLON expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 104
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 98

   21 for: S_FOR LPAREN SEMICOLON expr SEMICOLON . expr RPAREN statements
   27    | S_FOR LPAREN SEMICOLON expr SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 24
    RPAREN      shift, and go to state 105
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 106


State 99

   23 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON . expr RPAREN statements
   29    | S_FOR LPAREN declaration SEMICOLON SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 24
    RPAREN      shift, and go to state 107
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 108


State 100

   20 for: S_FOR LPAREN declaration SEMICOLON expr . SEMICOLON expr RPAREN statements
   25    | S_FOR LPAREN declaration SEMICOLON expr . SEMICOLON RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    SEMICOLON  shift, and go to state 109
    OR         shift, and go to state 51
    AND        shift, and go to state 52
    EQUAL      shift, and go to state 53
    NEQ        shift, and go to state 54
    GT         shift, and go to state 55
    LT         shift, and go to state 56
    GEQ        shift, and go to state 57
    LEQ        shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63


State 101

   22 for: S_FOR LPAREN expr SEMICOLON SEMICOLON . expr RPAREN statements
   28    | S_FOR LPAREN expr SEMICOLON SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 24
    RPAREN      shift, and go to state 110
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 111


State 102

   19 for: S_FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN statements
   24    | S_FOR LPAREN expr SEMICOLON expr . SEMICOLON RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    SEMICOLON  shift, and go to state 112
    OR         shift, and go to state 51
    AND        shift, and go to state 52
    EQUAL      shift, and go to state 53
    NEQ        shift, and go to state 54
    GT         shift, and go to state 55
    LT         shift, and go to state 56
    GEQ        shift, and go to state 57
    LEQ        shift, and go to state 58
    ADD        shift, and go to state 59
    SUB        shift, and go to state 60
    MUL        shift, and go to state 61
    DIV        shift, and go to state 62
    MOD        shift, and go to state 63


State 103

    3 statements: statements . statement
   30 for: S_FOR LPAREN SEMICOLON SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 30 (for)]
    T_INT       [reduce using rule 30 (for)]
    T_STRING    [reduce using rule 30 (for)]
    T_BOOL      [reduce using rule 30 (for)]
    S_IF        [reduce using rule 30 (for)]
    S_WHILE     [reduce using rule 30 (for)]
    S_RETURN    [reduce using rule 30 (for)]
    S_FOR       [reduce using rule 30 (for)]
    SEMICOLON   [reduce using rule 30 (for)]
    IDENTIFIER  [reduce using rule 30 (for)]
    $default    reduce using rule 30 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 104

   26 for: S_FOR LPAREN SEMICOLON SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 113
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 105

   27 for: S_FOR LPAREN SEMICOLON expr SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 114
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 106

   21 for: S_FOR LPAREN SEMICOLON expr SEMICOLON expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 115
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 107

   29 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 116
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 108

   23 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 117
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 109

   20 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON . expr RPAREN statements
   25    | S_FOR LPAREN declaration SEMICOLON expr SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 24
    RPAREN      shift, and go to state 118
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 119


State 110

   28 for: S_FOR LPAREN expr SEMICOLON SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 120
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 111

   22 for: S_FOR LPAREN expr SEMICOLON SEMICOLON expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 121
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 112

   19 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN statements
   24    | S_FOR LPAREN expr SEMICOLON expr SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 24
    RPAREN      shift, and go to state 122
    ADD         shift, and go to state 25
    SUB         shift, and go to state 26
    NOT         shift, and go to state 27
    TRUE        shift, and go to state 28
    FALSE       shift, and go to state 29
    IDENTIFIER  shift, and go to state 30
    INTEGER     shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33

    expr  go to state 123


State 113

    3 statements: statements . statement
   26 for: S_FOR LPAREN SEMICOLON SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 26 (for)]
    T_INT       [reduce using rule 26 (for)]
    T_STRING    [reduce using rule 26 (for)]
    T_BOOL      [reduce using rule 26 (for)]
    S_IF        [reduce using rule 26 (for)]
    S_WHILE     [reduce using rule 26 (for)]
    S_RETURN    [reduce using rule 26 (for)]
    S_FOR       [reduce using rule 26 (for)]
    SEMICOLON   [reduce using rule 26 (for)]
    IDENTIFIER  [reduce using rule 26 (for)]
    $default    reduce using rule 26 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 114

    3 statements: statements . statement
   27 for: S_FOR LPAREN SEMICOLON expr SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 27 (for)]
    T_INT       [reduce using rule 27 (for)]
    T_STRING    [reduce using rule 27 (for)]
    T_BOOL      [reduce using rule 27 (for)]
    S_IF        [reduce using rule 27 (for)]
    S_WHILE     [reduce using rule 27 (for)]
    S_RETURN    [reduce using rule 27 (for)]
    S_FOR       [reduce using rule 27 (for)]
    SEMICOLON   [reduce using rule 27 (for)]
    IDENTIFIER  [reduce using rule 27 (for)]
    $default    reduce using rule 27 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 115

   21 for: S_FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 124
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 116

    3 statements: statements . statement
   29 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 29 (for)]
    T_INT       [reduce using rule 29 (for)]
    T_STRING    [reduce using rule 29 (for)]
    T_BOOL      [reduce using rule 29 (for)]
    S_IF        [reduce using rule 29 (for)]
    S_WHILE     [reduce using rule 29 (for)]
    S_RETURN    [reduce using rule 29 (for)]
    S_FOR       [reduce using rule 29 (for)]
    SEMICOLON   [reduce using rule 29 (for)]
    IDENTIFIER  [reduce using rule 29 (for)]
    $default    reduce using rule 29 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 117

   23 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 125
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 118

   25 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 126
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 119

   20 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 127
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 120

    3 statements: statements . statement
   28 for: S_FOR LPAREN expr SEMICOLON SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 28 (for)]
    T_INT       [reduce using rule 28 (for)]
    T_STRING    [reduce using rule 28 (for)]
    T_BOOL      [reduce using rule 28 (for)]
    S_IF        [reduce using rule 28 (for)]
    S_WHILE     [reduce using rule 28 (for)]
    S_RETURN    [reduce using rule 28 (for)]
    S_FOR       [reduce using rule 28 (for)]
    SEMICOLON   [reduce using rule 28 (for)]
    IDENTIFIER  [reduce using rule 28 (for)]
    $default    reduce using rule 28 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 121

   22 for: S_FOR LPAREN expr SEMICOLON SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 128
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 122

   24 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 129
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 123

   19 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN statements
   36 expr: expr . EQUAL expr
   37     | expr . NEQ expr
   38     | expr . GT expr
   39     | expr . LT expr
   40     | expr . GEQ expr
   41     | expr . LEQ expr
   43     | expr . AND expr
   44     | expr . OR expr
   48     | expr . ADD expr
   49     | expr . SUB expr
   50     | expr . MUL expr
   51     | expr . DIV expr
   53     | expr . MOD expr

    RPAREN  shift, and go to state 130
    OR      shift, and go to state 51
    AND     shift, and go to state 52
    EQUAL   shift, and go to state 53
    NEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    GEQ     shift, and go to state 57
    LEQ     shift, and go to state 58
    ADD     shift, and go to state 59
    SUB     shift, and go to state 60
    MUL     shift, and go to state 61
    DIV     shift, and go to state 62
    MOD     shift, and go to state 63


State 124

    3 statements: statements . statement
   21 for: S_FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 21 (for)]
    T_INT       [reduce using rule 21 (for)]
    T_STRING    [reduce using rule 21 (for)]
    T_BOOL      [reduce using rule 21 (for)]
    S_IF        [reduce using rule 21 (for)]
    S_WHILE     [reduce using rule 21 (for)]
    S_RETURN    [reduce using rule 21 (for)]
    S_FOR       [reduce using rule 21 (for)]
    SEMICOLON   [reduce using rule 21 (for)]
    IDENTIFIER  [reduce using rule 21 (for)]
    $default    reduce using rule 21 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 125

    3 statements: statements . statement
   23 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 23 (for)]
    T_INT       [reduce using rule 23 (for)]
    T_STRING    [reduce using rule 23 (for)]
    T_BOOL      [reduce using rule 23 (for)]
    S_IF        [reduce using rule 23 (for)]
    S_WHILE     [reduce using rule 23 (for)]
    S_RETURN    [reduce using rule 23 (for)]
    S_FOR       [reduce using rule 23 (for)]
    SEMICOLON   [reduce using rule 23 (for)]
    IDENTIFIER  [reduce using rule 23 (for)]
    $default    reduce using rule 23 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 126

    3 statements: statements . statement
   25 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 25 (for)]
    T_INT       [reduce using rule 25 (for)]
    T_STRING    [reduce using rule 25 (for)]
    T_BOOL      [reduce using rule 25 (for)]
    S_IF        [reduce using rule 25 (for)]
    S_WHILE     [reduce using rule 25 (for)]
    S_RETURN    [reduce using rule 25 (for)]
    S_FOR       [reduce using rule 25 (for)]
    SEMICOLON   [reduce using rule 25 (for)]
    IDENTIFIER  [reduce using rule 25 (for)]
    $default    reduce using rule 25 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 127

   20 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 131
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 128

    3 statements: statements . statement
   22 for: S_FOR LPAREN expr SEMICOLON SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 22 (for)]
    T_INT       [reduce using rule 22 (for)]
    T_STRING    [reduce using rule 22 (for)]
    T_BOOL      [reduce using rule 22 (for)]
    S_IF        [reduce using rule 22 (for)]
    S_WHILE     [reduce using rule 22 (for)]
    S_RETURN    [reduce using rule 22 (for)]
    S_FOR       [reduce using rule 22 (for)]
    SEMICOLON   [reduce using rule 22 (for)]
    IDENTIFIER  [reduce using rule 22 (for)]
    $default    reduce using rule 22 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 129

    3 statements: statements . statement
   24 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 24 (for)]
    T_INT       [reduce using rule 24 (for)]
    T_STRING    [reduce using rule 24 (for)]
    T_BOOL      [reduce using rule 24 (for)]
    S_IF        [reduce using rule 24 (for)]
    S_WHILE     [reduce using rule 24 (for)]
    S_RETURN    [reduce using rule 24 (for)]
    S_FOR       [reduce using rule 24 (for)]
    SEMICOLON   [reduce using rule 24 (for)]
    IDENTIFIER  [reduce using rule 24 (for)]
    $default    reduce using rule 24 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 130

   19 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    LBRACE      shift, and go to state 9
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    statements   go to state 132
    statement    go to state 14
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 131

    3 statements: statements . statement
   20 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 20 (for)]
    T_INT       [reduce using rule 20 (for)]
    T_STRING    [reduce using rule 20 (for)]
    T_BOOL      [reduce using rule 20 (for)]
    S_IF        [reduce using rule 20 (for)]
    S_WHILE     [reduce using rule 20 (for)]
    S_RETURN    [reduce using rule 20 (for)]
    S_FOR       [reduce using rule 20 (for)]
    SEMICOLON   [reduce using rule 20 (for)]
    IDENTIFIER  [reduce using rule 20 (for)]
    $default    reduce using rule 20 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21


State 132

    3 statements: statements . statement
   19 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    S_IF        shift, and go to state 5
    S_WHILE     shift, and go to state 6
    S_RETURN    shift, and go to state 7
    S_FOR       shift, and go to state 8
    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    T_CHAR      [reduce using rule 19 (for)]
    T_INT       [reduce using rule 19 (for)]
    T_STRING    [reduce using rule 19 (for)]
    T_BOOL      [reduce using rule 19 (for)]
    S_IF        [reduce using rule 19 (for)]
    S_WHILE     [reduce using rule 19 (for)]
    S_RETURN    [reduce using rule 19 (for)]
    S_FOR       [reduce using rule 19 (for)]
    SEMICOLON   [reduce using rule 19 (for)]
    IDENTIFIER  [reduce using rule 19 (for)]
    $default    reduce using rule 19 (for)

    statement    go to state 39
    declaration  go to state 15
    assign       go to state 16
    if           go to state 17
    while        go to state 18
    for          go to state 19
    return       go to state 20
    T            go to state 21
