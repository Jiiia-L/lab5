Terminals unused in grammar

   BOOL


State 126 conflicts: 13 shift/reduce
State 127 conflicts: 13 shift/reduce
State 137 conflicts: 13 shift/reduce
State 147 conflicts: 13 shift/reduce
State 148 conflicts: 13 shift/reduce
State 149 conflicts: 13 shift/reduce
State 151 conflicts: 13 shift/reduce
State 155 conflicts: 13 shift/reduce
State 159 conflicts: 13 shift/reduce
State 160 conflicts: 13 shift/reduce
State 161 conflicts: 13 shift/reduce
State 163 conflicts: 13 shift/reduce
State 164 conflicts: 13 shift/reduce
State 166 conflicts: 13 shift/reduce
State 167 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LBRACE statements RBRACE

    5 statement: SEMICOLON
    6          | declaration SEMICOLON
    7          | assign SEMICOLON
    8          | if
    9          | while
   10          | for
   11          | return SEMICOLON
   12          | printf SEMICOLON
   13          | scanf SEMICOLON
   14          | main

   15 declaration: T IDENTIFIER LOP_ASSIGN expr
   16            | T idlist

   17 idlist: IDENTIFIER COMMA idlist
   18       | IDENTIFIER

   19 assign: IDENTIFIER LOP_ASSIGN expr
   20       | IDENTIFIER ADD_ASSIGN expr
   21       | IDENTIFIER SUB_ASSIGN expr
   22       | IDENTIFIER MUL_ASSIGN expr
   23       | IDENTIFIER DIV_ASSIGN expr

   24 if: S_IF LPAREN expr RPAREN statements

   25 while: S_WHILE LPAREN expr RPAREN statements

   26 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statements
   27    | S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statements
   28    | S_FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN statements
   29    | S_FOR LPAREN expr SEMICOLON SEMICOLON expr RPAREN statements
   30    | S_FOR LPAREN declaration SEMICOLON SEMICOLON expr RPAREN statements
   31    | S_FOR LPAREN expr SEMICOLON expr SEMICOLON RPAREN statements
   32    | S_FOR LPAREN declaration SEMICOLON expr SEMICOLON RPAREN statements
   33    | S_FOR LPAREN SEMICOLON SEMICOLON expr RPAREN statements
   34    | S_FOR LPAREN SEMICOLON expr SEMICOLON RPAREN statements
   35    | S_FOR LPAREN expr SEMICOLON SEMICOLON RPAREN statements
   36    | S_FOR LPAREN declaration SEMICOLON SEMICOLON RPAREN statements
   37    | S_FOR LPAREN SEMICOLON SEMICOLON RPAREN statements

   38 return: S_RETURN
   39       | S_RETURN expr

   40 printf: PRINTF LPAREN funcRParams RPAREN

   41 scanf: SCANF LPAREN funcRParams RPAREN

   42 funcRParams: expr
   43            | expr COMMA funcRParams
   44            | %empty

   45 main: T MAIN LPAREN funcRParams RPAREN statements

   46 expr: IDENTIFIER
   47     | TRUE
   48     | FALSE
   49     | expr EQUAL expr
   50     | expr NEQ expr
   51     | expr GT expr
   52     | expr LT expr
   53     | expr GEQ expr
   54     | expr LEQ expr
   55     | NOT expr
   56     | expr AND expr
   57     | expr OR expr
   58     | INTEGER
   59     | CHAR
   60     | STRING
   61     | expr ADD expr
   62     | expr SUB expr
   63     | expr MUL expr
   64     | expr DIV expr
   65     | LPAREN expr RPAREN
   66     | expr MOD expr
   67     | SUB expr
   68     | ADD expr
   69     | expr MADD
   70     | expr MSUB
   71     | LAND expr

   72 T: T_INT
   73  | T_CHAR
   74  | T_BOOL
   75  | T_STRING
   76  | VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 73
T_INT (259) 72
T_STRING (260) 75
T_BOOL (261) 74
VOID (262) 76
LOP_ASSIGN (263) 15 19
ADD_ASSIGN (264) 20
SUB_ASSIGN (265) 21
MUL_ASSIGN (266) 22
DIV_ASSIGN (267) 23
S_IF (268) 24
S_WHILE (269) 25
S_RETURN (270) 38 39
S_FOR (271) 26 27 28 29 30 31 32 33 34 35 36 37
LPAREN (272) 24 25 26 27 28 29 30 31 32 33 34 35 36 37 40 41 45 65
RPAREN (273) 24 25 26 27 28 29 30 31 32 33 34 35 36 37 40 41 45 65
LBRACE (274) 4
RBRACE (275) 4
SEMICOLON (276) 5 6 7 11 12 13 26 27 28 29 30 31 32 33 34 35 36 37
COMMA (277) 17 43
OR (278) 57
AND (279) 56
EQUAL (280) 49
NEQ (281) 50
GT (282) 51
LT (283) 52
GEQ (284) 53
LEQ (285) 54
ADD (286) 61 68
SUB (287) 62 67
MUL (288) 63
DIV (289) 64
MOD (290) 66
NOT (291) 55
LAND (292) 71
TRUE (293) 47
FALSE (294) 48
IDENTIFIER (295) 15 17 18 19 20 21 22 23 46
INTEGER (296) 58
CHAR (297) 59
BOOL (298)
STRING (299) 60
PRINTF (300) 40
SCANF (301) 41
MAIN (302) 45
UMINUS (303)
UPLUS (304)
MADD (305) 69
MSUB (306) 70


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
statements (54)
    on left: 2 3 4, on right: 1 3 4 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 45
statement (55)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 2 3
declaration (56)
    on left: 15 16, on right: 6 27 30 32 36
idlist (57)
    on left: 17 18, on right: 16 17
assign (58)
    on left: 19 20 21 22 23, on right: 7
if (59)
    on left: 24, on right: 8
while (60)
    on left: 25, on right: 9
for (61)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37, on right: 10
return (62)
    on left: 38 39, on right: 11
printf (63)
    on left: 40, on right: 12
scanf (64)
    on left: 41, on right: 13
funcRParams (65)
    on left: 42 43 44, on right: 40 41 43 45
main (66)
    on left: 45, on right: 14
expr (67)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64 65 66 67 68 69 70 71, on right: 15 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 39 42 43 49 50 51 52 53 54 55 56 57 61
    62 63 64 65 66 67 68 69 70 71
T (68)
    on left: 72 73 74 75 76, on right: 15 16 45


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    program      go to state 15
    statements   go to state 16
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 1

   73 T: T_CHAR .

    $default  reduce using rule 73 (T)


State 2

   72 T: T_INT .

    $default  reduce using rule 72 (T)


State 3

   75 T: T_STRING .

    $default  reduce using rule 75 (T)


State 4

   74 T: T_BOOL .

    $default  reduce using rule 74 (T)


State 5

   76 T: VOID .

    $default  reduce using rule 76 (T)


State 6

   24 if: S_IF . LPAREN expr RPAREN statements

    LPAREN  shift, and go to state 28


State 7

   25 while: S_WHILE . LPAREN expr RPAREN statements

    LPAREN  shift, and go to state 29


State 8

   38 return: S_RETURN .
   39       | S_RETURN . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    $default  reduce using rule 38 (return)

    expr  go to state 41


State 9

   26 for: S_FOR . LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statements
   27    | S_FOR . LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statements
   28    | S_FOR . LPAREN SEMICOLON expr SEMICOLON expr RPAREN statements
   29    | S_FOR . LPAREN expr SEMICOLON SEMICOLON expr RPAREN statements
   30    | S_FOR . LPAREN declaration SEMICOLON SEMICOLON expr RPAREN statements
   31    | S_FOR . LPAREN expr SEMICOLON expr SEMICOLON RPAREN statements
   32    | S_FOR . LPAREN declaration SEMICOLON expr SEMICOLON RPAREN statements
   33    | S_FOR . LPAREN SEMICOLON SEMICOLON expr RPAREN statements
   34    | S_FOR . LPAREN SEMICOLON expr SEMICOLON RPAREN statements
   35    | S_FOR . LPAREN expr SEMICOLON SEMICOLON RPAREN statements
   36    | S_FOR . LPAREN declaration SEMICOLON SEMICOLON RPAREN statements
   37    | S_FOR . LPAREN SEMICOLON SEMICOLON RPAREN statements

    LPAREN  shift, and go to state 42


State 10

    4 statements: LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 43
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 11

    5 statement: SEMICOLON .

    $default  reduce using rule 5 (statement)


State 12

   19 assign: IDENTIFIER . LOP_ASSIGN expr
   20       | IDENTIFIER . ADD_ASSIGN expr
   21       | IDENTIFIER . SUB_ASSIGN expr
   22       | IDENTIFIER . MUL_ASSIGN expr
   23       | IDENTIFIER . DIV_ASSIGN expr

    LOP_ASSIGN  shift, and go to state 44
    ADD_ASSIGN  shift, and go to state 45
    SUB_ASSIGN  shift, and go to state 46
    MUL_ASSIGN  shift, and go to state 47
    DIV_ASSIGN  shift, and go to state 48


State 13

   40 printf: PRINTF . LPAREN funcRParams RPAREN

    LPAREN  shift, and go to state 49


State 14

   41 scanf: SCANF . LPAREN funcRParams RPAREN

    LPAREN  shift, and go to state 50


State 15

    0 $accept: program . $end

    $end  shift, and go to state 51


State 16

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    $default  reduce using rule 1 (program)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 17

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 18

    6 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 19

    7 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 20

    8 statement: if .

    $default  reduce using rule 8 (statement)


State 21

    9 statement: while .

    $default  reduce using rule 9 (statement)


State 22

   10 statement: for .

    $default  reduce using rule 10 (statement)


State 23

   11 statement: return . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 24

   12 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 25

   13 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 26

   14 statement: main .

    $default  reduce using rule 14 (statement)


State 27

   15 declaration: T . IDENTIFIER LOP_ASSIGN expr
   16            | T . idlist
   45 main: T . MAIN LPAREN funcRParams RPAREN statements

    IDENTIFIER  shift, and go to state 58
    MAIN        shift, and go to state 59

    idlist  go to state 60


State 28

   24 if: S_IF LPAREN . expr RPAREN statements

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 61


State 29

   25 while: S_WHILE LPAREN . expr RPAREN statements

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 62


State 30

   65 expr: LPAREN . expr RPAREN

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 63


State 31

   68 expr: ADD . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 64


State 32

   67 expr: SUB . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 65


State 33

   55 expr: NOT . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 66


State 34

   71 expr: LAND . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 67


State 35

   47 expr: TRUE .

    $default  reduce using rule 47 (expr)


State 36

   48 expr: FALSE .

    $default  reduce using rule 48 (expr)


State 37

   46 expr: IDENTIFIER .

    $default  reduce using rule 46 (expr)


State 38

   58 expr: INTEGER .

    $default  reduce using rule 58 (expr)


State 39

   59 expr: CHAR .

    $default  reduce using rule 59 (expr)


State 40

   60 expr: STRING .

    $default  reduce using rule 60 (expr)


State 41

   39 return: S_RETURN expr .
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 39 (return)


State 42

   26 for: S_FOR LPAREN . expr SEMICOLON expr SEMICOLON expr RPAREN statements
   27    | S_FOR LPAREN . declaration SEMICOLON expr SEMICOLON expr RPAREN statements
   28    | S_FOR LPAREN . SEMICOLON expr SEMICOLON expr RPAREN statements
   29    | S_FOR LPAREN . expr SEMICOLON SEMICOLON expr RPAREN statements
   30    | S_FOR LPAREN . declaration SEMICOLON SEMICOLON expr RPAREN statements
   31    | S_FOR LPAREN . expr SEMICOLON expr SEMICOLON RPAREN statements
   32    | S_FOR LPAREN . declaration SEMICOLON expr SEMICOLON RPAREN statements
   33    | S_FOR LPAREN . SEMICOLON SEMICOLON expr RPAREN statements
   34    | S_FOR LPAREN . SEMICOLON expr SEMICOLON RPAREN statements
   35    | S_FOR LPAREN . expr SEMICOLON SEMICOLON RPAREN statements
   36    | S_FOR LPAREN . declaration SEMICOLON SEMICOLON RPAREN statements
   37    | S_FOR LPAREN . SEMICOLON SEMICOLON RPAREN statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    LPAREN      shift, and go to state 30
    SEMICOLON   shift, and go to state 83
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    declaration  go to state 84
    expr         go to state 85
    T            go to state 86


State 43

    3 statements: statements . statement
    4           | LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    RBRACE      shift, and go to state 87
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 44

   19 assign: IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 88


State 45

   20 assign: IDENTIFIER ADD_ASSIGN . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 89


State 46

   21 assign: IDENTIFIER SUB_ASSIGN . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 90


State 47

   22 assign: IDENTIFIER MUL_ASSIGN . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 91


State 48

   23 assign: IDENTIFIER DIV_ASSIGN . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 92


State 49

   40 printf: PRINTF LPAREN . funcRParams RPAREN

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    $default  reduce using rule 44 (funcRParams)

    funcRParams  go to state 93
    expr         go to state 94


State 50

   41 scanf: SCANF LPAREN . funcRParams RPAREN

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    $default  reduce using rule 44 (funcRParams)

    funcRParams  go to state 95
    expr         go to state 94


State 51

    0 $accept: program $end .

    $default  accept


State 52

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 53

    6 statement: declaration SEMICOLON .

    $default  reduce using rule 6 (statement)


State 54

    7 statement: assign SEMICOLON .

    $default  reduce using rule 7 (statement)


State 55

   11 statement: return SEMICOLON .

    $default  reduce using rule 11 (statement)


State 56

   12 statement: printf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 57

   13 statement: scanf SEMICOLON .

    $default  reduce using rule 13 (statement)


State 58

   15 declaration: T IDENTIFIER . LOP_ASSIGN expr
   17 idlist: IDENTIFIER . COMMA idlist
   18       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 96
    COMMA       shift, and go to state 97

    $default  reduce using rule 18 (idlist)


State 59

   45 main: T MAIN . LPAREN funcRParams RPAREN statements

    LPAREN  shift, and go to state 98


State 60

   16 declaration: T idlist .

    $default  reduce using rule 16 (declaration)


State 61

   24 if: S_IF LPAREN expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 99
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 62

   25 while: S_WHILE LPAREN expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 100
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 63

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | LPAREN expr . RPAREN
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 101
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 64

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   68     | ADD expr .
   69     | expr . MADD
   70     | expr . MSUB

    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 68 (expr)


State 65

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   67     | SUB expr .
   69     | expr . MADD
   70     | expr . MSUB

    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 67 (expr)


State 66

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   55     | NOT expr .
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 55 (expr)


State 67

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB
   71     | LAND expr .

    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 71 (expr)


State 68

   57 expr: expr OR . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 102


State 69

   56 expr: expr AND . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 103


State 70

   49 expr: expr EQUAL . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 104


State 71

   50 expr: expr NEQ . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 105


State 72

   51 expr: expr GT . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 106


State 73

   52 expr: expr LT . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 107


State 74

   53 expr: expr GEQ . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 108


State 75

   54 expr: expr LEQ . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 109


State 76

   61 expr: expr ADD . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 110


State 77

   62 expr: expr SUB . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 111


State 78

   63 expr: expr MUL . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 112


State 79

   64 expr: expr DIV . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 113


State 80

   66 expr: expr MOD . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 114


State 81

   69 expr: expr MADD .

    $default  reduce using rule 69 (expr)


State 82

   70 expr: expr MSUB .

    $default  reduce using rule 70 (expr)


State 83

   28 for: S_FOR LPAREN SEMICOLON . expr SEMICOLON expr RPAREN statements
   33    | S_FOR LPAREN SEMICOLON . SEMICOLON expr RPAREN statements
   34    | S_FOR LPAREN SEMICOLON . expr SEMICOLON RPAREN statements
   37    | S_FOR LPAREN SEMICOLON . SEMICOLON RPAREN statements

    LPAREN      shift, and go to state 30
    SEMICOLON   shift, and go to state 115
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 116


State 84

   27 for: S_FOR LPAREN declaration . SEMICOLON expr SEMICOLON expr RPAREN statements
   30    | S_FOR LPAREN declaration . SEMICOLON SEMICOLON expr RPAREN statements
   32    | S_FOR LPAREN declaration . SEMICOLON expr SEMICOLON RPAREN statements
   36    | S_FOR LPAREN declaration . SEMICOLON SEMICOLON RPAREN statements

    SEMICOLON  shift, and go to state 117


State 85

   26 for: S_FOR LPAREN expr . SEMICOLON expr SEMICOLON expr RPAREN statements
   29    | S_FOR LPAREN expr . SEMICOLON SEMICOLON expr RPAREN statements
   31    | S_FOR LPAREN expr . SEMICOLON expr SEMICOLON RPAREN statements
   35    | S_FOR LPAREN expr . SEMICOLON SEMICOLON RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    SEMICOLON  shift, and go to state 118
    OR         shift, and go to state 68
    AND        shift, and go to state 69
    EQUAL      shift, and go to state 70
    NEQ        shift, and go to state 71
    GT         shift, and go to state 72
    LT         shift, and go to state 73
    GEQ        shift, and go to state 74
    LEQ        shift, and go to state 75
    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MUL        shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80
    MADD       shift, and go to state 81
    MSUB       shift, and go to state 82


State 86

   15 declaration: T . IDENTIFIER LOP_ASSIGN expr
   16            | T . idlist

    IDENTIFIER  shift, and go to state 58

    idlist  go to state 60


State 87

    4 statements: LBRACE statements RBRACE .

    $default  reduce using rule 4 (statements)


State 88

   19 assign: IDENTIFIER LOP_ASSIGN expr .
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 19 (assign)


State 89

   20 assign: IDENTIFIER ADD_ASSIGN expr .
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 20 (assign)


State 90

   21 assign: IDENTIFIER SUB_ASSIGN expr .
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 21 (assign)


State 91

   22 assign: IDENTIFIER MUL_ASSIGN expr .
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 22 (assign)


State 92

   23 assign: IDENTIFIER DIV_ASSIGN expr .
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 23 (assign)


State 93

   40 printf: PRINTF LPAREN funcRParams . RPAREN

    RPAREN  shift, and go to state 119


State 94

   42 funcRParams: expr .
   43            | expr . COMMA funcRParams
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    COMMA  shift, and go to state 120
    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 42 (funcRParams)


State 95

   41 scanf: SCANF LPAREN funcRParams . RPAREN

    RPAREN  shift, and go to state 121


State 96

   15 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 122


State 97

   17 idlist: IDENTIFIER COMMA . idlist

    IDENTIFIER  shift, and go to state 123

    idlist  go to state 124


State 98

   45 main: T MAIN LPAREN . funcRParams RPAREN statements

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    $default  reduce using rule 44 (funcRParams)

    funcRParams  go to state 125
    expr         go to state 94


State 99

   24 if: S_IF LPAREN expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 126
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 100

   25 while: S_WHILE LPAREN expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 127
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 101

   65 expr: LPAREN expr RPAREN .

    $default  reduce using rule 65 (expr)


State 102

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   57     | expr OR expr .
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 57 (expr)


State 103

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   56     | expr AND expr .
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 56 (expr)


State 104

   49 expr: expr . EQUAL expr
   49     | expr EQUAL expr .
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    GT    shift, and go to state 72
    LT    shift, and go to state 73
    GEQ   shift, and go to state 74
    LEQ   shift, and go to state 75
    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 49 (expr)


State 105

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   50     | expr NEQ expr .
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    GT    shift, and go to state 72
    LT    shift, and go to state 73
    GEQ   shift, and go to state 74
    LEQ   shift, and go to state 75
    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 50 (expr)


State 106

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   51     | expr GT expr .
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 51 (expr)


State 107

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   52     | expr LT expr .
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 52 (expr)


State 108

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   53     | expr GEQ expr .
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 53 (expr)


State 109

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   54     | expr LEQ expr .
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    ADD   shift, and go to state 76
    SUB   shift, and go to state 77
    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 54 (expr)


State 110

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   61     | expr ADD expr .
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 61 (expr)


State 111

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   62     | expr SUB expr .
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    MUL   shift, and go to state 78
    DIV   shift, and go to state 79
    MOD   shift, and go to state 80
    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 62 (expr)


State 112

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   63     | expr MUL expr .
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 63 (expr)


State 113

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   64     | expr DIV expr .
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 64 (expr)


State 114

   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   66     | expr MOD expr .
   69     | expr . MADD
   70     | expr . MSUB

    MADD  shift, and go to state 81
    MSUB  shift, and go to state 82

    $default  reduce using rule 66 (expr)


State 115

   33 for: S_FOR LPAREN SEMICOLON SEMICOLON . expr RPAREN statements
   37    | S_FOR LPAREN SEMICOLON SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 30
    RPAREN      shift, and go to state 128
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 129


State 116

   28 for: S_FOR LPAREN SEMICOLON expr . SEMICOLON expr RPAREN statements
   34    | S_FOR LPAREN SEMICOLON expr . SEMICOLON RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    SEMICOLON  shift, and go to state 130
    OR         shift, and go to state 68
    AND        shift, and go to state 69
    EQUAL      shift, and go to state 70
    NEQ        shift, and go to state 71
    GT         shift, and go to state 72
    LT         shift, and go to state 73
    GEQ        shift, and go to state 74
    LEQ        shift, and go to state 75
    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MUL        shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80
    MADD       shift, and go to state 81
    MSUB       shift, and go to state 82


State 117

   27 for: S_FOR LPAREN declaration SEMICOLON . expr SEMICOLON expr RPAREN statements
   30    | S_FOR LPAREN declaration SEMICOLON . SEMICOLON expr RPAREN statements
   32    | S_FOR LPAREN declaration SEMICOLON . expr SEMICOLON RPAREN statements
   36    | S_FOR LPAREN declaration SEMICOLON . SEMICOLON RPAREN statements

    LPAREN      shift, and go to state 30
    SEMICOLON   shift, and go to state 131
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 132


State 118

   26 for: S_FOR LPAREN expr SEMICOLON . expr SEMICOLON expr RPAREN statements
   29    | S_FOR LPAREN expr SEMICOLON . SEMICOLON expr RPAREN statements
   31    | S_FOR LPAREN expr SEMICOLON . expr SEMICOLON RPAREN statements
   35    | S_FOR LPAREN expr SEMICOLON . SEMICOLON RPAREN statements

    LPAREN      shift, and go to state 30
    SEMICOLON   shift, and go to state 133
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 134


State 119

   40 printf: PRINTF LPAREN funcRParams RPAREN .

    $default  reduce using rule 40 (printf)


State 120

   43 funcRParams: expr COMMA . funcRParams

    LPAREN      shift, and go to state 30
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    $default  reduce using rule 44 (funcRParams)

    funcRParams  go to state 135
    expr         go to state 94


State 121

   41 scanf: SCANF LPAREN funcRParams RPAREN .

    $default  reduce using rule 41 (scanf)


State 122

   15 declaration: T IDENTIFIER LOP_ASSIGN expr .
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    OR     shift, and go to state 68
    AND    shift, and go to state 69
    EQUAL  shift, and go to state 70
    NEQ    shift, and go to state 71
    GT     shift, and go to state 72
    LT     shift, and go to state 73
    GEQ    shift, and go to state 74
    LEQ    shift, and go to state 75
    ADD    shift, and go to state 76
    SUB    shift, and go to state 77
    MUL    shift, and go to state 78
    DIV    shift, and go to state 79
    MOD    shift, and go to state 80
    MADD   shift, and go to state 81
    MSUB   shift, and go to state 82

    $default  reduce using rule 15 (declaration)


State 123

   17 idlist: IDENTIFIER . COMMA idlist
   18       | IDENTIFIER .

    COMMA  shift, and go to state 97

    $default  reduce using rule 18 (idlist)


State 124

   17 idlist: IDENTIFIER COMMA idlist .

    $default  reduce using rule 17 (idlist)


State 125

   45 main: T MAIN LPAREN funcRParams . RPAREN statements

    RPAREN  shift, and go to state 136


State 126

    3 statements: statements . statement
   24 if: S_IF LPAREN expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 24 (if)]
    T_INT       [reduce using rule 24 (if)]
    T_STRING    [reduce using rule 24 (if)]
    T_BOOL      [reduce using rule 24 (if)]
    VOID        [reduce using rule 24 (if)]
    S_IF        [reduce using rule 24 (if)]
    S_WHILE     [reduce using rule 24 (if)]
    S_RETURN    [reduce using rule 24 (if)]
    S_FOR       [reduce using rule 24 (if)]
    SEMICOLON   [reduce using rule 24 (if)]
    IDENTIFIER  [reduce using rule 24 (if)]
    PRINTF      [reduce using rule 24 (if)]
    SCANF       [reduce using rule 24 (if)]
    $default    reduce using rule 24 (if)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 127

    3 statements: statements . statement
   25 while: S_WHILE LPAREN expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 25 (while)]
    T_INT       [reduce using rule 25 (while)]
    T_STRING    [reduce using rule 25 (while)]
    T_BOOL      [reduce using rule 25 (while)]
    VOID        [reduce using rule 25 (while)]
    S_IF        [reduce using rule 25 (while)]
    S_WHILE     [reduce using rule 25 (while)]
    S_RETURN    [reduce using rule 25 (while)]
    S_FOR       [reduce using rule 25 (while)]
    SEMICOLON   [reduce using rule 25 (while)]
    IDENTIFIER  [reduce using rule 25 (while)]
    PRINTF      [reduce using rule 25 (while)]
    SCANF       [reduce using rule 25 (while)]
    $default    reduce using rule 25 (while)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 128

   37 for: S_FOR LPAREN SEMICOLON SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 137
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 129

   33 for: S_FOR LPAREN SEMICOLON SEMICOLON expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 138
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 130

   28 for: S_FOR LPAREN SEMICOLON expr SEMICOLON . expr RPAREN statements
   34    | S_FOR LPAREN SEMICOLON expr SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 30
    RPAREN      shift, and go to state 139
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 140


State 131

   30 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON . expr RPAREN statements
   36    | S_FOR LPAREN declaration SEMICOLON SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 30
    RPAREN      shift, and go to state 141
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 142


State 132

   27 for: S_FOR LPAREN declaration SEMICOLON expr . SEMICOLON expr RPAREN statements
   32    | S_FOR LPAREN declaration SEMICOLON expr . SEMICOLON RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    SEMICOLON  shift, and go to state 143
    OR         shift, and go to state 68
    AND        shift, and go to state 69
    EQUAL      shift, and go to state 70
    NEQ        shift, and go to state 71
    GT         shift, and go to state 72
    LT         shift, and go to state 73
    GEQ        shift, and go to state 74
    LEQ        shift, and go to state 75
    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MUL        shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80
    MADD       shift, and go to state 81
    MSUB       shift, and go to state 82


State 133

   29 for: S_FOR LPAREN expr SEMICOLON SEMICOLON . expr RPAREN statements
   35    | S_FOR LPAREN expr SEMICOLON SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 30
    RPAREN      shift, and go to state 144
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 145


State 134

   26 for: S_FOR LPAREN expr SEMICOLON expr . SEMICOLON expr RPAREN statements
   31    | S_FOR LPAREN expr SEMICOLON expr . SEMICOLON RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    SEMICOLON  shift, and go to state 146
    OR         shift, and go to state 68
    AND        shift, and go to state 69
    EQUAL      shift, and go to state 70
    NEQ        shift, and go to state 71
    GT         shift, and go to state 72
    LT         shift, and go to state 73
    GEQ        shift, and go to state 74
    LEQ        shift, and go to state 75
    ADD        shift, and go to state 76
    SUB        shift, and go to state 77
    MUL        shift, and go to state 78
    DIV        shift, and go to state 79
    MOD        shift, and go to state 80
    MADD       shift, and go to state 81
    MSUB       shift, and go to state 82


State 135

   43 funcRParams: expr COMMA funcRParams .

    $default  reduce using rule 43 (funcRParams)


State 136

   45 main: T MAIN LPAREN funcRParams RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 147
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 137

    3 statements: statements . statement
   37 for: S_FOR LPAREN SEMICOLON SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 37 (for)]
    T_INT       [reduce using rule 37 (for)]
    T_STRING    [reduce using rule 37 (for)]
    T_BOOL      [reduce using rule 37 (for)]
    VOID        [reduce using rule 37 (for)]
    S_IF        [reduce using rule 37 (for)]
    S_WHILE     [reduce using rule 37 (for)]
    S_RETURN    [reduce using rule 37 (for)]
    S_FOR       [reduce using rule 37 (for)]
    SEMICOLON   [reduce using rule 37 (for)]
    IDENTIFIER  [reduce using rule 37 (for)]
    PRINTF      [reduce using rule 37 (for)]
    SCANF       [reduce using rule 37 (for)]
    $default    reduce using rule 37 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 138

   33 for: S_FOR LPAREN SEMICOLON SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 148
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 139

   34 for: S_FOR LPAREN SEMICOLON expr SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 149
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 140

   28 for: S_FOR LPAREN SEMICOLON expr SEMICOLON expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 150
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 141

   36 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 151
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 142

   30 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 152
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 143

   27 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON . expr RPAREN statements
   32    | S_FOR LPAREN declaration SEMICOLON expr SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 30
    RPAREN      shift, and go to state 153
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 154


State 144

   35 for: S_FOR LPAREN expr SEMICOLON SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 155
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 145

   29 for: S_FOR LPAREN expr SEMICOLON SEMICOLON expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 156
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 146

   26 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON . expr RPAREN statements
   31    | S_FOR LPAREN expr SEMICOLON expr SEMICOLON . RPAREN statements

    LPAREN      shift, and go to state 30
    RPAREN      shift, and go to state 157
    ADD         shift, and go to state 31
    SUB         shift, and go to state 32
    NOT         shift, and go to state 33
    LAND        shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 37
    INTEGER     shift, and go to state 38
    CHAR        shift, and go to state 39
    STRING      shift, and go to state 40

    expr  go to state 158


State 147

    3 statements: statements . statement
   45 main: T MAIN LPAREN funcRParams RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 45 (main)]
    T_INT       [reduce using rule 45 (main)]
    T_STRING    [reduce using rule 45 (main)]
    T_BOOL      [reduce using rule 45 (main)]
    VOID        [reduce using rule 45 (main)]
    S_IF        [reduce using rule 45 (main)]
    S_WHILE     [reduce using rule 45 (main)]
    S_RETURN    [reduce using rule 45 (main)]
    S_FOR       [reduce using rule 45 (main)]
    SEMICOLON   [reduce using rule 45 (main)]
    IDENTIFIER  [reduce using rule 45 (main)]
    PRINTF      [reduce using rule 45 (main)]
    SCANF       [reduce using rule 45 (main)]
    $default    reduce using rule 45 (main)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 148

    3 statements: statements . statement
   33 for: S_FOR LPAREN SEMICOLON SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 33 (for)]
    T_INT       [reduce using rule 33 (for)]
    T_STRING    [reduce using rule 33 (for)]
    T_BOOL      [reduce using rule 33 (for)]
    VOID        [reduce using rule 33 (for)]
    S_IF        [reduce using rule 33 (for)]
    S_WHILE     [reduce using rule 33 (for)]
    S_RETURN    [reduce using rule 33 (for)]
    S_FOR       [reduce using rule 33 (for)]
    SEMICOLON   [reduce using rule 33 (for)]
    IDENTIFIER  [reduce using rule 33 (for)]
    PRINTF      [reduce using rule 33 (for)]
    SCANF       [reduce using rule 33 (for)]
    $default    reduce using rule 33 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 149

    3 statements: statements . statement
   34 for: S_FOR LPAREN SEMICOLON expr SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 34 (for)]
    T_INT       [reduce using rule 34 (for)]
    T_STRING    [reduce using rule 34 (for)]
    T_BOOL      [reduce using rule 34 (for)]
    VOID        [reduce using rule 34 (for)]
    S_IF        [reduce using rule 34 (for)]
    S_WHILE     [reduce using rule 34 (for)]
    S_RETURN    [reduce using rule 34 (for)]
    S_FOR       [reduce using rule 34 (for)]
    SEMICOLON   [reduce using rule 34 (for)]
    IDENTIFIER  [reduce using rule 34 (for)]
    PRINTF      [reduce using rule 34 (for)]
    SCANF       [reduce using rule 34 (for)]
    $default    reduce using rule 34 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 150

   28 for: S_FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 159
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 151

    3 statements: statements . statement
   36 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 36 (for)]
    T_INT       [reduce using rule 36 (for)]
    T_STRING    [reduce using rule 36 (for)]
    T_BOOL      [reduce using rule 36 (for)]
    VOID        [reduce using rule 36 (for)]
    S_IF        [reduce using rule 36 (for)]
    S_WHILE     [reduce using rule 36 (for)]
    S_RETURN    [reduce using rule 36 (for)]
    S_FOR       [reduce using rule 36 (for)]
    SEMICOLON   [reduce using rule 36 (for)]
    IDENTIFIER  [reduce using rule 36 (for)]
    PRINTF      [reduce using rule 36 (for)]
    SCANF       [reduce using rule 36 (for)]
    $default    reduce using rule 36 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 152

   30 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 160
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 153

   32 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 161
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 154

   27 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 162
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 155

    3 statements: statements . statement
   35 for: S_FOR LPAREN expr SEMICOLON SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 35 (for)]
    T_INT       [reduce using rule 35 (for)]
    T_STRING    [reduce using rule 35 (for)]
    T_BOOL      [reduce using rule 35 (for)]
    VOID        [reduce using rule 35 (for)]
    S_IF        [reduce using rule 35 (for)]
    S_WHILE     [reduce using rule 35 (for)]
    S_RETURN    [reduce using rule 35 (for)]
    S_FOR       [reduce using rule 35 (for)]
    SEMICOLON   [reduce using rule 35 (for)]
    IDENTIFIER  [reduce using rule 35 (for)]
    PRINTF      [reduce using rule 35 (for)]
    SCANF       [reduce using rule 35 (for)]
    $default    reduce using rule 35 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 156

   29 for: S_FOR LPAREN expr SEMICOLON SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 163
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 157

   31 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 164
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 158

   26 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr . RPAREN statements
   49 expr: expr . EQUAL expr
   50     | expr . NEQ expr
   51     | expr . GT expr
   52     | expr . LT expr
   53     | expr . GEQ expr
   54     | expr . LEQ expr
   56     | expr . AND expr
   57     | expr . OR expr
   61     | expr . ADD expr
   62     | expr . SUB expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   66     | expr . MOD expr
   69     | expr . MADD
   70     | expr . MSUB

    RPAREN  shift, and go to state 165
    OR      shift, and go to state 68
    AND     shift, and go to state 69
    EQUAL   shift, and go to state 70
    NEQ     shift, and go to state 71
    GT      shift, and go to state 72
    LT      shift, and go to state 73
    GEQ     shift, and go to state 74
    LEQ     shift, and go to state 75
    ADD     shift, and go to state 76
    SUB     shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MOD     shift, and go to state 80
    MADD    shift, and go to state 81
    MSUB    shift, and go to state 82


State 159

    3 statements: statements . statement
   28 for: S_FOR LPAREN SEMICOLON expr SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 28 (for)]
    T_INT       [reduce using rule 28 (for)]
    T_STRING    [reduce using rule 28 (for)]
    T_BOOL      [reduce using rule 28 (for)]
    VOID        [reduce using rule 28 (for)]
    S_IF        [reduce using rule 28 (for)]
    S_WHILE     [reduce using rule 28 (for)]
    S_RETURN    [reduce using rule 28 (for)]
    S_FOR       [reduce using rule 28 (for)]
    SEMICOLON   [reduce using rule 28 (for)]
    IDENTIFIER  [reduce using rule 28 (for)]
    PRINTF      [reduce using rule 28 (for)]
    SCANF       [reduce using rule 28 (for)]
    $default    reduce using rule 28 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 160

    3 statements: statements . statement
   30 for: S_FOR LPAREN declaration SEMICOLON SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 30 (for)]
    T_INT       [reduce using rule 30 (for)]
    T_STRING    [reduce using rule 30 (for)]
    T_BOOL      [reduce using rule 30 (for)]
    VOID        [reduce using rule 30 (for)]
    S_IF        [reduce using rule 30 (for)]
    S_WHILE     [reduce using rule 30 (for)]
    S_RETURN    [reduce using rule 30 (for)]
    S_FOR       [reduce using rule 30 (for)]
    SEMICOLON   [reduce using rule 30 (for)]
    IDENTIFIER  [reduce using rule 30 (for)]
    PRINTF      [reduce using rule 30 (for)]
    SCANF       [reduce using rule 30 (for)]
    $default    reduce using rule 30 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 161

    3 statements: statements . statement
   32 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 32 (for)]
    T_INT       [reduce using rule 32 (for)]
    T_STRING    [reduce using rule 32 (for)]
    T_BOOL      [reduce using rule 32 (for)]
    VOID        [reduce using rule 32 (for)]
    S_IF        [reduce using rule 32 (for)]
    S_WHILE     [reduce using rule 32 (for)]
    S_RETURN    [reduce using rule 32 (for)]
    S_FOR       [reduce using rule 32 (for)]
    SEMICOLON   [reduce using rule 32 (for)]
    IDENTIFIER  [reduce using rule 32 (for)]
    PRINTF      [reduce using rule 32 (for)]
    SCANF       [reduce using rule 32 (for)]
    $default    reduce using rule 32 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 162

   27 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 166
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 163

    3 statements: statements . statement
   29 for: S_FOR LPAREN expr SEMICOLON SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 29 (for)]
    T_INT       [reduce using rule 29 (for)]
    T_STRING    [reduce using rule 29 (for)]
    T_BOOL      [reduce using rule 29 (for)]
    VOID        [reduce using rule 29 (for)]
    S_IF        [reduce using rule 29 (for)]
    S_WHILE     [reduce using rule 29 (for)]
    S_RETURN    [reduce using rule 29 (for)]
    S_FOR       [reduce using rule 29 (for)]
    SEMICOLON   [reduce using rule 29 (for)]
    IDENTIFIER  [reduce using rule 29 (for)]
    PRINTF      [reduce using rule 29 (for)]
    SCANF       [reduce using rule 29 (for)]
    $default    reduce using rule 29 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 164

    3 statements: statements . statement
   31 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 31 (for)]
    T_INT       [reduce using rule 31 (for)]
    T_STRING    [reduce using rule 31 (for)]
    T_BOOL      [reduce using rule 31 (for)]
    VOID        [reduce using rule 31 (for)]
    S_IF        [reduce using rule 31 (for)]
    S_WHILE     [reduce using rule 31 (for)]
    S_RETURN    [reduce using rule 31 (for)]
    S_FOR       [reduce using rule 31 (for)]
    SEMICOLON   [reduce using rule 31 (for)]
    IDENTIFIER  [reduce using rule 31 (for)]
    PRINTF      [reduce using rule 31 (for)]
    SCANF       [reduce using rule 31 (for)]
    $default    reduce using rule 31 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 165

   26 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    LBRACE      shift, and go to state 10
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    statements   go to state 167
    statement    go to state 17
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 166

    3 statements: statements . statement
   27 for: S_FOR LPAREN declaration SEMICOLON expr SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 27 (for)]
    T_INT       [reduce using rule 27 (for)]
    T_STRING    [reduce using rule 27 (for)]
    T_BOOL      [reduce using rule 27 (for)]
    VOID        [reduce using rule 27 (for)]
    S_IF        [reduce using rule 27 (for)]
    S_WHILE     [reduce using rule 27 (for)]
    S_RETURN    [reduce using rule 27 (for)]
    S_FOR       [reduce using rule 27 (for)]
    SEMICOLON   [reduce using rule 27 (for)]
    IDENTIFIER  [reduce using rule 27 (for)]
    PRINTF      [reduce using rule 27 (for)]
    SCANF       [reduce using rule 27 (for)]
    $default    reduce using rule 27 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27


State 167

    3 statements: statements . statement
   26 for: S_FOR LPAREN expr SEMICOLON expr SEMICOLON expr RPAREN statements .

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    VOID        shift, and go to state 5
    S_IF        shift, and go to state 6
    S_WHILE     shift, and go to state 7
    S_RETURN    shift, and go to state 8
    S_FOR       shift, and go to state 9
    SEMICOLON   shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14

    T_CHAR      [reduce using rule 26 (for)]
    T_INT       [reduce using rule 26 (for)]
    T_STRING    [reduce using rule 26 (for)]
    T_BOOL      [reduce using rule 26 (for)]
    VOID        [reduce using rule 26 (for)]
    S_IF        [reduce using rule 26 (for)]
    S_WHILE     [reduce using rule 26 (for)]
    S_RETURN    [reduce using rule 26 (for)]
    S_FOR       [reduce using rule 26 (for)]
    SEMICOLON   [reduce using rule 26 (for)]
    IDENTIFIER  [reduce using rule 26 (for)]
    PRINTF      [reduce using rule 26 (for)]
    SCANF       [reduce using rule 26 (for)]
    $default    reduce using rule 26 (for)

    statement    go to state 52
    declaration  go to state 18
    assign       go to state 19
    if           go to state 20
    while        go to state 21
    for          go to state 22
    return       go to state 23
    printf       go to state 24
    scanf        go to state 25
    main         go to state 26
    T            go to state 27
