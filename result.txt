lno@0    @0   program  children:[ @1 @5 @8 @11 @14 ]  
lno@1    @1 statement  children:[ @2 @3 @4 ]  stmt: decl
lno@1    @2      type  type: int
lno@1    @3  variable  varname: a
lno@1    @4  variable  varname: s
lno@2    @5 statement  children:[ @6 @7 ]  stmt: assign
lno@2    @6  variable  varname: a
lno@2    @7     const  type: int
lno@3    @8 statement  children:[ @9 @10 ]  stmt: assign
lno@3    @9  variable  varname: s
lno@3    @10     const  type: int
lno@4    @11 statement  children:[ @12 @13 ]  stmt: decl
lno@4    @12      type  type: char
lno@4    @13  variable  varname: ch
lno@4    @14 statement  children:[ @15 @33 @36 @39 @42 @45 @71 ]  stmt: while
lno@5    @15expression  children:[ @16 @29 ]  
lno@5    @16expression  children:[ @17 @20 ]  
lno@5    @17expression  children:[ @18 @19 ]  
lno@5    @18  variable  varname: a
lno@5    @19     const  type: int
lno@5    @20expression  children:[ @21 @24 ]  
lno@5    @21expression  children:[ @22 @23 ]  
lno@5    @22  variable  varname: a
lno@5    @23     const  type: int
lno@5    @24expression  children:[ @25 @28 ]  
lno@5    @25expression  children:[ @26 @27 ]  
lno@5    @26  variable  varname: a
lno@5    @27     const  type: int
lno@5    @28     const  type: int
lno@5    @29expression  children:[ @30 @32 ]  
lno@5    @30expression  children:[ @31 ]  
lno@5    @31  variable  varname: a
lno@5    @32     const  type: int
lno@6    @33 statement  children:[ @34 @35 ]  stmt: assign
lno@6    @34  variable  varname: a
lno@6    @35     const  type: int
lno@7    @36 statement  children:[ @37 @38 ]  stmt: decl
lno@7    @37      type  type: int
lno@7    @38  variable  varname: a
lno@8    @39 statement  children:[ @40 @41 ]  stmt: assign
lno@8    @40  variable  varname: a
lno@8    @41     const  type: int
lno@9    @42 statement  children:[ @43 @44 ]  stmt: assign
lno@9    @43  variable  varname: s
lno@9    @44  variable  varname: a
lno@9    @45 statement  children:[ @46 @51 @54 @57 ]  stmt: if
lno@9    @46expression  children:[ @47 @49 ]  
lno@9    @47expression  children:[ @48 ]  
lno@10    @48  variable  varname: s
lno@10    @49expression  children:[ @50 ]  
lno@10    @50     const  type: int
lno@11    @51 statement  children:[ @52 @53 ]  stmt: decl
lno@11    @52      type  type: int
lno@11    @53  variable  varname: b
lno@12    @54 statement  children:[ @55 @56 ]  stmt: assign
lno@12    @55  variable  varname: b
lno@12    @56     const  type: int
lno@12    @57 statement  children:[ @58 @62 @65 @68 ]  stmt: for
lno@13    @58 statement  children:[ @59 @60 @61 ]  stmt: decl
lno@13    @59      type  type: int
lno@13    @60  variable  varname: i
lno@13    @61     const  type: int
lno@13    @62expression  children:[ @63 @64 ]  
lno@13    @63  variable  varname: i
lno@13    @64  variable  varname: b
lno@13    @65expression  children:[ @66 @67 ]  
lno@13    @66  variable  varname: i
lno@13    @67     const  type: int
lno@14    @68 statement  children:[ @69 @70 ]  stmt: assign
lno@14    @69  variable  varname: b
lno@14    @70     const  type: int
lno@18    @71 statement  children:[ @72 ]  stmt: return
lno@18    @72  variable  varname: a
